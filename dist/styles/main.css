/* Vendors */
/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
/* Document
       ========================================================================== */
/**
     * 1. Correct the line height in all browsers.
     * 2. Prevent adjustments of font size after orientation changes in
     *    IE on Windows Phone and in iOS.
     */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
       ========================================================================== */
/**
     * Remove the margin in all browsers (opinionated).
     */
body {
  margin: 0; }

/**
     * Add the correct display in IE 9-.
     */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
     * Correct the font size and margin on `h1` elements within `section` and
     * `article` contexts in Chrome, Firefox, and Safari.
     */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
figcaption,
figure {
  display: block; }

/**
     * Add the correct margin in IE 8.
     */
figure {
  margin: 1em 40px; }

/**
     * 1. Add the correct box sizing in Firefox.
     * 2. Show the overflow in Edge and IE.
     */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
     * Add the correct display in IE.
     */
main {
  display: block; }

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Links
       ========================================================================== */
/**
     * 1. Remove the gray background on active links in IE 10.
     * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
     */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/* Text-level semantics
       ========================================================================== */
/**
     * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
     */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
     * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
     */
b,
strong {
  font-weight: inherit; }

/**
     * Add the correct font weight in Chrome, Edge, and Safari.
     */
b,
strong {
  font-weight: bolder; }

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
     * Add the correct font style in Android 4.3-.
     */
dfn {
  font-style: italic; }

/**
     * Add the correct background and color in IE 9-.
     */
mark {
  background-color: #ff0;
  color: #000; }

/**
     * Add the correct font size in all browsers.
     */
small {
  font-size: 80%; }

/**
     * Prevent `sub` and `sup` elements from affecting the line height in
     * all browsers.
     */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
audio,
video {
  display: inline-block; }

/**
     * Add the correct display in iOS 4-7.
     */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
     * Remove the border on images inside links in IE 10-.
     */
img {
  border-style: none; }

/**
     * Hide the overflow in IE.
     */
svg:not(:root) {
  overflow: hidden; }

/* Forms
       ========================================================================== */
/**
     * 1. Change the font styles in all browsers (opinionated).
     * 2. Remove the margin in Firefox and Safari.
     */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
     * Show the overflow in IE.
     */
button {
  overflow: visible; }

/**
     * Remove the inheritance of text transform in Edge, Firefox, and IE.
     * 1. Remove the inheritance of text transform in Firefox.
     */
button,
select {
  /* 1 */
  text-transform: none; }

/**
     * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
     *    controls in Android 4.
     * 2. Correct the inability to style clickable types in iOS and Safari.
     */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

button,
[type="button"],
[type="reset"],
[type="submit"] {
  /**
       * Remove the inner border and padding in Firefox.
       */
  /**
       * Restore the focus styles unset by the previous rule.
       */ }
  button::-moz-focus-inner,
  [type="button"]::-moz-focus-inner,
  [type="reset"]::-moz-focus-inner,
  [type="submit"]::-moz-focus-inner {
    border-style: none;
    padding: 0; }
  button:-moz-focusring,
  [type="button"]:-moz-focusring,
  [type="reset"]:-moz-focusring,
  [type="submit"]:-moz-focusring {
    outline: 1px dotted ButtonText; }

/**
     * Show the overflow in Edge.
     */
input {
  overflow: visible; }

/**
     * 1. Add the correct box sizing in IE 10-.
     * 2. Remove the padding in IE 10-.
     */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
     * Correct the cursor style of increment and decrement buttons in Chrome.
     */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
     * 1. Correct the odd appearance in Chrome and Safari.
     * 2. Correct the outline style in Safari.
     */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
  /**
       * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
       */ }
  [type="search"]::-webkit-search-cancel-button, [type="search"]::-webkit-search-decoration {
    -webkit-appearance: none; }

/**
     * 1. Correct the inability to style clickable types in iOS and Safari.
     * 2. Change font properties to `inherit` in Safari.
     */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/**
     * Correct the padding in Firefox.
     */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
     * 1. Correct the text wrapping in Edge and IE.
     * 2. Correct the color inheritance from `fieldset` elements in IE.
     * 3. Remove the padding so developers are not caught out when they zero out
     *    `fieldset` elements in all browsers.
     */
legend {
  box-sizing: border-box;
  /* 1 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  color: inherit;
  /* 2 */
  white-space: normal;
  /* 1 */ }

/**
     * 1. Add the correct display in IE 9-.
     * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
     */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
     * Remove the default vertical scrollbar in IE.
     */
textarea {
  overflow: auto; }

/* Interactive
       ========================================================================== */
/*
     * Add the correct display in Edge, IE, and Firefox.
     */
details {
  display: block; }

/*
     * Add the correct display in all browsers.
     */
summary {
  display: list-item; }

/*
     * Add the correct display in IE 9-.
     */
menu {
  display: block; }

/* Scripting
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
canvas {
  display: inline-block; }

/**
     * Add the correct display in IE.
     */
template {
  display: none; }

/* Hidden
       ========================================================================== */
/**
     * Add the correct display in IE 10-.
     */
[hidden] {
  display: none; }

/* Settings */
/* Media quiries */
/* Fonts */
/* Colors  */
/* Simple colors */
body {
  font-family: Arial, -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
  color: #333;
  font-weight: 700;
  line-height: 1.15;
  font-size: 16px; }

p.title {
  font-size: 18px;
  line-height: 1.16; }

p.status {
  color: #858585;
  font-size: 12px;
  font-weight: 400; }

span.temperature {
  font-size: 24px; }

/* Utilities */
/* Elements */
body {
  box-sizing: border-box; }

ul {
  list-style: none;
  margin: 0;
  padding: 0; }

a {
  color: inherit;
  text-decoration: none; }

hr {
  border: none;
  margin: 0; }

p {
  margin: 0; }

*,
*::before,
*::after {
  box-sizing: inherit; }

/* Layout */
@media (min-width: 1366px) {
  .content__row {
    display: flex;
    margin-bottom: 30px; } }

@media (min-width: 1366px) {
  .content__main {
    width: 50%;
    margin-right: 25px; } }

@media (min-width: 1366px) {
  .content__scripts {
    width: 652px; } }

.footer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 12px 20px;
  flex-wrap: wrap;
  width: 100%; }
  @media (min-width: 320px) {
    .footer {
      flex-wrap: nowrap; } }
  @media (min-width: 1366px) {
    .footer {
      padding-bottom: 27px;
      max-width: 1450px;
      margin: 0 auto; } }
  .footer__list {
    margin-right: 30px;
    margin-bottom: 20px; }
    @media (min-width: 320px) {
      .footer__list {
        margin-bottom: 0; } }
  .footer__item {
    color: #858585;
    font-size: 12px;
    font-weight: 400;
    display: inline-block; }
    .footer__item:not(:last-child) {
      margin-right: 20px; }

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: relative; }
  @media (min-width: 550px) {
    .header__logo {
      margin-right: 50px; } }
  .header__nav.show {
    z-index: 1; }
  .header__underline {
    height: 1px;
    width: 100%;
    color: #f0f0f0; }

.page {
  display: flex;
  flex-direction: column; }
  .page__wrapper {
    transition: .5s all;
    -webkit-filter: blur(0px);
            filter: blur(0px);
    position: relative; }
    .page__wrapper.blur {
      -webkit-filter: blur(5px);
              filter: blur(5px); }
      .page__wrapper.blur:after {
        position: fixed;
        display: block;
        content: '';
        top: 0;
        left: 0;
        width: 100%;
        height: 100vh;
        background-color: rgba(0, 0, 0, 0.15); }
  @media (min-width: 1366px) {
    .page {
      overflow: hidden; } }
  .page__header {
    padding: 12px 20px; }
    @media (min-width: 1366px) {
      .page__header {
        padding: 26px 40px; } }
  .page__content {
    padding: 0 20px;
    margin: 0 auto; }
    @media (min-width: 1366px) {
      .page__content {
        padding: 30px 20px;
        max-width: 1450px;
        margin: 0 auto; } }
  .page .main {
    display: flex;
    flex-direction: column;
    flex-grow: 1; }

/* Components */
.burger {
  z-index: 1;
  cursor: pointer; }
  @media (min-width: 550px) {
    .burger {
      display: none; } }
  .burger__line {
    display: block;
    width: 16px;
    height: 3px;
    background-color: #333;
    border-radius: 1px;
    transition: .1s all; }
    .burger__line:not(:last-child) {
      margin-bottom: 3px; }
  .burger.close .burger__line:nth-child(1) {
    -webkit-transform: translate(0, 5px) rotate(45deg);
            transform: translate(0, 5px) rotate(45deg); }
  .burger.close .burger__line:nth-child(2) {
    display: none; }
  .burger.close .burger__line:nth-child(3) {
    -webkit-transform: translate(0, -1px) rotate(-45deg);
            transform: translate(0, -1px) rotate(-45deg); }

.content-devices__header {
  display: flex;
  justify-content: space-between;
  position: relative;
  margin-bottom: 17px; }
  @media (min-width: 1366px) {
    .content-devices__header {
      justify-content: flex-start; } }

@media (min-width: 1366px) {
  .content-devices__title {
    margin-right: 13px; } }

.content-devices__menu-list {
  display: flex;
  flex-direction: column-reverse;
  -webkit-transform: translateY(-100%) translateX(12.5%);
          transform: translateY(-100%) translateX(12.5%);
  position: absolute;
  top: 0;
  right: 0; }
  @media (min-width: 1366px) {
    .content-devices__menu-list {
      flex-direction: row;
      position: static;
      -webkit-transform: none;
              transform: none; } }
  .content-devices__menu-list.open .content-devices__menu-list-item:nth-child(1) {
    -webkit-animation-name: menu;
            animation-name: menu;
    -webkit-animation-duration: 600ms;
            animation-duration: 600ms;
    -webkit-animation-timing-function: ease-in-out;
            animation-timing-function: ease-in-out;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards; }
    @media (min-width: 1366px) {
      .content-devices__menu-list.open .content-devices__menu-list-item:nth-child(1) {
        -webkit-animation: none;
                animation: none; } }
  .content-devices__menu-list.open .content-devices__menu-list-item:nth-child(2) {
    -webkit-animation-name: menu;
            animation-name: menu;
    -webkit-animation-duration: 450ms;
            animation-duration: 450ms;
    -webkit-animation-timing-function: ease-in-out;
            animation-timing-function: ease-in-out;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards; }
    @media (min-width: 1366px) {
      .content-devices__menu-list.open .content-devices__menu-list-item:nth-child(2) {
        -webkit-animation: none;
                animation: none; } }
  .content-devices__menu-list.open .content-devices__menu-list-item:nth-child(3) {
    -webkit-animation-name: menu;
            animation-name: menu;
    -webkit-animation-duration: 300ms;
            animation-duration: 300ms;
    -webkit-animation-timing-function: ease-in-out;
            animation-timing-function: ease-in-out;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards; }
    @media (min-width: 1366px) {
      .content-devices__menu-list.open .content-devices__menu-list-item:nth-child(3) {
        -webkit-animation: none;
                animation: none; } }
  .content-devices__menu-list.open .content-devices__menu-list-item:nth-child(4) {
    -webkit-animation-name: menu;
            animation-name: menu;
    -webkit-animation-duration: 150ms;
            animation-duration: 150ms;
    -webkit-animation-timing-function: ease-in-out;
            animation-timing-function: ease-in-out;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards; }
    @media (min-width: 1366px) {
      .content-devices__menu-list.open .content-devices__menu-list-item:nth-child(4) {
        -webkit-animation: none;
                animation: none; } }

.content-devices__title {
  display: inline; }

.content-devices__menu-list-item {
  border-radius: 20px;
  background-color: #f7f7f7;
  color: #000;
  font-size: 13px;
  padding: 7px 16px;
  cursor: pointer;
  text-align: center;
  transition: .2s all;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transform: rotateX(90deg);
          transform: rotateX(90deg); }
  .content-devices__menu-list-item.picked {
    background-color: #ffd93e; }
  @media (min-width: 1366px) {
    .content-devices__menu-list-item {
      -webkit-transform: none;
              transform: none;
      margin-right: 10px; } }

.content-devices__menu-list-item-all {
  border-radius: 20px;
  background-color: #f7f7f7;
  color: #000;
  font-size: 13px;
  padding: 7px 16px;
  cursor: pointer;
  text-align: center;
  transition: .2s all;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transform: rotateX(90deg);
          transform: rotateX(90deg);
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: #f7f7f7;
  opacity: 1;
  visibility: visible;
  -webkit-transform: none;
          transform: none; }
  @media (min-width: 1366px) {
    .content-devices__menu-list-item-all {
      -webkit-transform: none;
              transform: none;
      margin-right: 10px; } }
  .content-devices__menu-list-item-all.picked {
    background-color: #ffd93e; }
  .content-devices__menu-list-item-all span {
    margin-right: 5px; }
    @media (min-width: 1366px) {
      .content-devices__menu-list-item-all span {
        margin-right: 0; } }
  .content-devices__menu-list-item-all img {
    -webkit-transform: rotate(180deg);
            transform: rotate(180deg); }
    @media (min-width: 1366px) {
      .content-devices__menu-list-item-all img {
        position: absolute !important;
        clip: rect(1px 1px 1px 1px);
        /* IE6, IE7 */
        clip: rect(1px, 1px, 1px, 1px);
        padding: 0 !important;
        border: 0 !important;
        height: 1px !important;
        width: 1px !important;
        overflow: hidden; } }

.content-devices .panel__list {
  margin-left: -6px; }
  @media (min-width: 1366px) {
    .content-devices .panel__list {
      overflow: visible; } }

.content-devices__checkbox {
  position: absolute !important;
  clip: rect(1px 1px 1px 1px);
  /* IE6, IE7 */
  clip: rect(1px, 1px, 1px, 1px);
  padding: 0 !important;
  border: 0 !important;
  height: 1px !important;
  width: 1px !important;
  overflow: hidden; }
  .content-devices__checkbox.kitchen:checked ~ :not([data-filter*="kitchen"]) {
    display: none; }
  .content-devices__checkbox.hall:checked ~ :not([data-filter*="hall"]) {
    display: none; }
  .content-devices__checkbox.lamp:checked ~ :not([data-filter*="lamp"]) {
    display: none; }
  .content-devices__checkbox.camera:checked ~ :not([data-filter*="camera"]) {
    display: none; }

.content-devices .panel__item.display-none {
  display: none; }

@-webkit-keyframes menu {
  0% {
    -webkit-transform: rotateX(90deg);
            transform: rotateX(90deg);
    opacity: 0; }
  100% {
    opacity: 1;
    -webkit-transform: rotateX(0deg);
            transform: rotateX(0deg); } }

@keyframes menu {
  0% {
    -webkit-transform: rotateX(90deg);
            transform: rotateX(90deg);
    opacity: 0; }
  100% {
    opacity: 1;
    -webkit-transform: rotateX(0deg);
            transform: rotateX(0deg); } }

.content-main {
  margin-bottom: 31px; }
  @media (min-width: 1366px) {
    .content-main {
      margin-bottom: 0; } }
  .content-main__header {
    display: none; }
    @media (min-width: 1366px) {
      .content-main__header {
        display: block;
        margin-bottom: 20px; } }
  .content-main__block {
    min-height: 282px;
    max-width: 100%;
    border-radius: 20px;
    padding: 20px;
    padding-right: 0;
    position: relative; }
    @media (min-width: 1366px) {
      .content-main__block {
        max-height: 330px;
        display: flex;
        justify-content: space-between;
        padding: 25px 20px 0 25px; } }
  .content-main__scroll-button {
    display: none; }
    @media (min-width: 1366px) {
      .content-main__scroll-button {
        display: flex;
        justify-content: center;
        align-items: center;
        position: absolute;
        bottom: 0;
        right: 26px;
        cursor: pointer;
        width: 200px;
        height: 40px;
        background-color: #f0f0f0;
        border-radius: 20px 20px 0 0; } }
  .content-main__image {
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    border-radius: 20px;
    -o-object-fit: cover;
       object-fit: cover;
    width: 100%;
    height: 100%; }
  .content-main__text {
    margin-bottom: 20px; }
  .content-main__hello {
    margin-bottom: 5px; }
  .content-main__status {
    font-size: 12px;
    font-weight: 400;
    margin-bottom: 15px; }
  .content-main__weather {
    display: flex; }
  .content-main__weather-block {
    margin-right: 20px; }
  .content-main__weather-place {
    margin-bottom: 5px; }
  .content-main__temperature-block {
    display: flex;
    justify-content: flex-end; }
  .content-main__weather-temperature {
    margin-right: 5px; }
  @media (min-width: 1366px) {
    .content-main .panel__list {
      display: flex;
      flex-direction: column;
      max-height: 100%;
      margin-top: -6px; }
    .content-main .panel__item {
      margin-bottom: 30px; }
      .content-main .panel__item:not(:last-child) {
        margin-right: 0;
        margin-bottom: 15px; } }

.content-scripts {
  margin-bottom: 25px; }
  @media (min-width: 1366px) {
    .content-scripts {
      margin-bottom: 0; } }
  .content-scripts__header {
    margin-bottom: 14px; }
    @media (min-width: 1366px) {
      .content-scripts__header {
        display: flex;
        justify-content: space-between; } }
  .content-scripts__arrows {
    display: none; }
    @media (min-width: 1366px) {
      .content-scripts__arrows {
        display: flex;
        align-items: flex-end;
        margin-right: 6px; } }
  .content-scripts__arrow {
    cursor: pointer;
    display: none; }
    .content-scripts__arrow.show {
      justify-content: center;
      align-items: center;
      display: flex; }
    .content-scripts__arrow--right {
      -webkit-transform: rotate(180deg);
              transform: rotate(180deg);
      margin-left: 23px; }
  @media (min-width: 1366px) {
    .content-scripts__body {
      overflow: hidden;
      width: 646px; } }
  .content-scripts__panels-container {
    display: flex;
    transition: .35s all;
    overflow: auto;
    -ms-overflow-style: none; }
    .content-scripts__panels-container::-webkit-scrollbar {
      width: 0; }
    @media (min-width: 1366px) {
      .content-scripts__panels-container {
        width: 9999px; } }
  @media (min-width: 1366px) {
    .content-scripts__panel-list {
      width: 646px; } }
  .content-scripts .panel__list {
    margin-left: -6px; }
  @media (min-width: 1366px) {
    .content-scripts .panel__list {
      flex-wrap: wrap; }
    .content-scripts .panel__item {
      margin-bottom: 15px;
      height: 100px;
      flex-shrink: 0; }
      .content-scripts .panel__item:nth-child(3n) {
        margin-right: 0; } }

@media (min-width: 768px) {
  .horizontal-line {
    height: 1px;
    width: 100%;
    background-color: #f0f0f0; } }

.nav {
  transition: .3s all;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  background-color: #fff;
  -webkit-transform: translateY(-100%);
          transform: translateY(-100%); }
  @media (max-width: 550px) {
    .nav {
      padding: 30px 20px; } }
  @media (min-width: 550px) {
    .nav {
      position: static;
      -webkit-transform: none;
              transform: none; } }
  .nav__list {
    width: 100%; }
    @media (min-width: 550px) {
      .nav__list {
        margin: 0 auto; } }
  .nav__item {
    display: inline-block; }
    .nav__item:not(:last-child) {
      margin-right: 25px; }
      @media (max-width: 550px) {
        .nav__item:not(:last-child) {
          margin-right: 0;
          margin-bottom: 15px; } }
    @media (max-width: 550px) {
      .nav__item {
        display: block;
        text-align: center;
        margin-right: 0; } }
  .nav__link:not(.active) {
    color: #858585; }
  .nav.show {
    -webkit-transform: translateY(0);
            transform: translateY(0); }

.panel__list {
  overflow: auto;
  padding: 6px;
  display: flex;
  -ms-overflow-style: none; }
  .panel__list::-webkit-scrollbar {
    width: 0; }

.panel__item {
  flex-shrink: 0;
  width: 200px;
  height: 120px;
  background-color: #f0f0f0;
  border-radius: 20px;
  display: inline-block;
  padding: 15px;
  display: flex;
  flex-direction: column;
  cursor: pointer; }
  .panel__item:hover {
    background-color: #fff;
    box-shadow: 0 2px 6px 0 rgba(197, 186, 186, 0.5); }
  .panel__item:not(:last-child) {
    margin-right: 20px; }

.panel__text {
  margin-top: auto; }

.popup {
  position: absolute;
  height: 120px;
  width: 200px;
  transition: .5s all;
  z-index: 1;
  overflow: hidden;
  margin: 20px;
  display: block; }
  .popup.show {
    display: block;
    position: fixed;
    width: calc(100vw - 40px);
    height: calc(100vh - 40px);
    overflow-y: scroll; }
    @media (min-width: 1366px) {
      .popup.show {
        width: 630px;
        height: auto;
        left: 50% !important;
        top: 50% !important;
        -webkit-transform: translate(-50%, -50%);
                transform: translate(-50%, -50%);
        overflow-y: auto; } }
    .popup.show .popup__content-container {
      height: 490px;
      border-radius: 20px;
      background-color: #fff;
      margin-bottom: 15px;
      padding: 20px;
      display: flex;
      flex-direction: column; }
      @media (min-width: 1366px) {
        .popup.show .popup__content-container {
          height: 240px; } }
      @media (min-width: 1366px) {
        .popup.show .popup__content-container.floor {
          height: 345px; } }
    .popup.show.visible .popup__header {
      opacity: 1; }
    .popup.show.visible .popup__choice {
      opacity: 1; }
    .popup.show.visible [class^="popup__content--"] {
      opacity: 1; }
    .popup.show.visible .popup__accept {
      opacity: 1; }
    .popup.show.visible .popup__close {
      opacity: 1; }
  .popup.hide {
    display: none; }
  .popup__content--floor {
    background: url(../assets/background.svg) center, url(../assets/OvalCopy.png) 88% 67%, url(../assets/Oval.png) center;
    background-repeat: no-repeat;
    flex-grow: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 66px;
    width: 264px;
    margin: 0 auto;
    opacity: 0;
    transition: 1.5s all; }
    @media (min-width: 1366px) {
      .popup__content--floor {
        background: url(../assets/background.svg) center center no-repeat, url(../assets/OvalCopy.png) 88% 86%, url(../assets/Oval.png) center center;
        background-repeat: no-repeat; } }
  .popup__content--temp {
    margin: 0 auto;
    flex-grow: 1;
    width: 60px;
    height: 100%;
    background-image: linear-gradient(to bottom, #F76B1C, #FFD800, #068FFF);
    border-radius: 35px;
    position: relative;
    opacity: 0;
    transition: 1.5s all; }
    @media (min-width: 1366px) {
      .popup__content--temp {
        max-height: 60px;
        width: 100%;
        background-image: linear-gradient(to left, #F76B1C, #FFD800, #068FFF); } }
    .popup__content--temp:before {
      position: absolute;
      top: 15px;
      left: 50%;
      content: '+30';
      -webkit-transform: translateX(-50%);
              transform: translateX(-50%);
      color: #fff;
      display: block;
      font-size: 18px; }
      @media (min-width: 1366px) {
        .popup__content--temp:before {
          left: auto;
          top: 50%;
          -webkit-transform: translateY(-50%);
                  transform: translateY(-50%);
          right: 20px; } }
    .popup__content--temp:after {
      position: absolute;
      bottom: 15px;
      left: 48%;
      -webkit-transform: translateX(-50%);
              transform: translateX(-50%);
      content: '-10';
      color: #fff;
      display: block;
      font-size: 18px; }
      @media (min-width: 1366px) {
        .popup__content--temp:after {
          left: auto;
          top: 50%;
          -webkit-transform: translateY(-50%);
                  transform: translateY(-50%);
          left: 20px; } }
  .popup__content--light {
    margin: 0 auto;
    flex-grow: 1;
    width: 60px;
    height: 100%;
    background-image: linear-gradient(to bottom, #FFB100, #FFE88C);
    border-radius: 35px;
    position: relative;
    opacity: 0;
    transition: 1.5s all; }
    @media (min-width: 1366px) {
      .popup__content--light {
        max-height: 60px;
        width: 100%;
        background-image: linear-gradient(to left, #FFB100, #FFE88C); } }
    .popup__content--light:before {
      position: absolute;
      top: 15px;
      left: 50%;
      -webkit-transform: translateX(-50%);
              transform: translateX(-50%);
      content: url("../assets/icon_sun_max.svg");
      color: #fff;
      display: block;
      font-size: 18px; }
      @media (min-width: 1366px) {
        .popup__content--light:before {
          left: auto;
          top: 50%;
          -webkit-transform: translateY(-50%);
                  transform: translateY(-50%);
          right: 20px; } }
    .popup__content--light:after {
      position: absolute;
      bottom: 15px;
      left: 50%;
      -webkit-transform: translateX(-50%);
              transform: translateX(-50%);
      content: url("../assets/icon_sun_min.svg");
      color: #fff;
      display: block;
      font-size: 18px; }
      @media (min-width: 1366px) {
        .popup__content--light:after {
          left: auto;
          top: 39%;
          -webkit-transform: translateY(-50%);
                  transform: translateY(-50%);
          left: 20px; } }
  .popup__lever {
    width: 70px;
    height: 70px;
    border: 4px solid #fff;
    position: absolute;
    top: 100px;
    left: 50%;
    -webkit-transform: translateX(-50%);
            transform: translateX(-50%);
    border-radius: 50%;
    box-shadow: inset 0 0 0 3px #e8ad00;
    cursor: pointer;
    z-index: 100; }
    @media (min-width: 1366px) {
      .popup__lever {
        left: auto;
        top: 50%;
        right: 100px;
        -webkit-transform: translateY(-50%);
                transform: translateY(-50%); } }
  .popup__header {
    color: #333;
    transition: 1.5s all;
    margin-bottom: 15px;
    opacity: 0; }
  .popup__name {
    font-size: 18px;
    font-weight: 700;
    margin-bottom: 5px; }
    @media (min-width: 1366px) {
      .popup__name {
        font-size: 27px; } }
  .popup__status {
    font-size: 12px;
    font-weight: 400; }
    @media (min-width: 1366px) {
      .popup__status {
        font-size: 14px; } }
  .popup__choice {
    transition: 1.5s all;
    margin-bottom: 25px;
    display: flex;
    opacity: 0;
    overflow-x: scroll; }
    @media (min-width: 1366px) {
      .popup__choice {
        overflow-x: auto; } }
  .popup__choice-item {
    display: block;
    border-radius: 20px;
    padding: 7px 14px 15px;
    font-size: 13px;
    color: #000;
    margin-right: 10px;
    background-color: #f2f1f0;
    cursor: pointer; }
    @media (min-width: 1366px) {
      .popup__choice-item {
        padding: 7px 15px; } }
    .popup__choice-item.active {
      background-color: #ffd93e; }
  .popup__accept {
    margin-bottom: 15px;
    padding: 20px 0;
    width: 100%;
    background-color: #ffd93e;
    display: block;
    text-align: center;
    border-radius: 20px;
    transition: 1.5s opacity;
    cursor: pointer;
    opacity: 0; }
    @media (min-width: 1366px) {
      .popup__accept {
        width: calc(50% - 8px);
        display: inline-block;
        margin-right: 16px; }
        .popup__accept:hover {
          background-color: #fafa00; } }
  .popup__close {
    margin-bottom: 15px;
    padding: 20px 0;
    background-color: #fff;
    width: 100%;
    display: block;
    text-align: center;
    border-radius: 20px;
    cursor: pointer;
    transition: 1.5s opacity;
    transition: 0 background-color;
    opacity: 0; }
    @media (min-width: 1366px) {
      .popup__close {
        width: calc(50% - 8px);
        display: inline-block; }
        .popup__close:hover {
          background-color: #eee; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
